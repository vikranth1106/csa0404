#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>

int main() {
    int fd;
    struct stat fileStat;
    char buffer[100];

    fd = open("testfile.txt", O_CREAT | O_RDWR, 0644);
    if (fd < 0) {
        perror("Error opening file");
        return 1;
    }

    write(fd, "This is a test file for UNIX system call demo.\n", 47);

    int flags = fcntl(fd, F_GETFL);
    if (flags < 0) {
        perror("fcntl");
        close(fd);
        return 1;
    }
    printf("File descriptor flags: %d\n", flags);

    lseek(fd, 0, SEEK_SET); 
    read(fd, buffer, sizeof(buffer) - 1);
    buffer[sizeof(buffer) - 1] = '\0';
    printf("Content from file: %s\n", buffer);

    close(fd);

    if (stat("testfile.txt", &fileStat) < 0) {
        perror("stat");
        return 1;
    }

    printf("File size: %ld bytes\n", fileStat.st_size);
    printf("File permissions: %o\n", fileStat.st_mode & 0777);
    printf("Last modified time: %ld\n", fileStat.st_mtime);

    DIR *d;
    struct dirent *dir;
    d = opendir(".");
    if (d == NULL) {
        perror("opendir");
        return 1;
    }

    printf("\nFiles in current directory:\n");
    while ((dir = readdir(d)) != NULL) {
        printf("%s\n", dir->d_name);
    }

    closedir(d);

    return 0;
}
output:
File descriptor flags: 2
Content from file: This is a test file for UNIX system call demo.
File size: 47 bytes
File permissions: 644
Last modified time: 1716458372

Files in current directory:
.
..
testfile.txt
your_program_name
...
