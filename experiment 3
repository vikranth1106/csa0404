#include <stdio.h>

struct Process {
    int pid;            
    int burst_time;     
    int waiting_time;   
    int turnaround_time;
};

int main() {
    int n, i;
    struct Process p[100];  
   
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Enter burst time for Process %d: ", p[i].pid);
        scanf("%d", &p[i].burst_time);
    }


    p[0].waiting_time = 0; // First process has no wait
    for (i = 1; i < n; i++) {
        p[i].waiting_time = p[i - 1].waiting_time + p[i - 1].burst_time;
    }

    // Calculate turnaround time
    for (i = 0; i < n; i++) {
        p[i].turnaround_time = p[i].waiting_time + p[i].burst_time;
    }
    printf("\nFCFS Scheduling:\n");
    printf("PID\tBurst\tWaiting\tTurnaround\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\n", p[i].pid, p[i].burst_time, p[i].waiting_time, p[i].turnaround_time);
    }

    float avg_wait = 0, avg_tat = 0;
    for (i = 0; i < n; i++) {
        avg_wait += p[i].waiting_time;
        avg_tat += p[i].turnaround_time;
    }

    avg_wait /= n;
    avg_tat /= n;

    printf("\nAverage Waiting Time    : %.2f", avg_wait);
    printf("\nAverage Turnaround Time : %.2f\n", avg_tat);

    return 0;
}
output:
Enter the number of processes: 2
Enter burst time for Process 1: 5
Enter burst time for Process 2: 2

FCFS Scheduling:
PID	Burst	Waiting	Turnaround
1	5	0	5
2	2	5	7

Average Waiting Time    : 2.50
Average Turnaround Time : 6.00
