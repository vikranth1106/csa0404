#include <stdio.h>

struct Process {
    int pid;             
    int burst_time;      
    int priority; 
    int waiting_time;    
    int turnaround_time; 
};


void sortByPriority(struct Process p[], int n) {
    struct Process temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (p[j].priority > p[j + 1].priority) {
                temp = p[j];
                p[j] = p[j + 1];
                p[j + 1] = temp;
            }
        }
    }
}

int main() {
    int n;
    struct Process p[100];


    printf("Enter the number of processes: ");
    scanf("%d", &n);


    for (int i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Enter burst time for Process %d: ", p[i].pid);
        scanf("%d", &p[i].burst_time);
        printf("Enter priority for Process %d (lower number = higher priority): ", p[i].pid);
        scanf("%d", &p[i].priority);
    }

    sortByPriority(p, n);


    p[0].waiting_time = 0;
    for (int i = 1; i < n; i++) {
        p[i].waiting_time = p[i - 1].waiting_time + p[i - 1].burst_time;
    }

 
    for (int i = 0; i < n; i++) {
        p[i].turnaround_time = p[i].waiting_time + p[i].burst_time;
    }


    printf("\nPriority Scheduling (Non-Preemptive):\n");
    printf("PID\tBurst\tPriority\tWaiting\tTurnaround\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t\t%d\t%d\n", p[i].pid, p[i].burst_time, p[i].priority, p[i].waiting_time, p[i].turnaround_time);
    }


    float avg_wait = 0, avg_tat = 0;
    for (int i = 0; i < n; i++) {
        avg_wait += p[i].waiting_time;
        avg_tat += p[i].turnaround_time;
    }

    avg_wait /= n;
    avg_tat /= n;

    printf("\nAverage Waiting Time    : %.2f", avg_wait);
    printf("\nAverage Turnaround Time : %.2f\n", avg_tat);

    return 0;
}
output:
Enter the number of processes: 3
Enter burst time for Process 1: 4
Enter priority for Process 1 (lower number = higher priority): 2
Enter burst time for Process 2: 5
Enter priority for Process 2 (lower number = higher priority): 7
Enter burst time for Process 3: 5
Enter priority for Process 3 (lower number = higher priority): 1

Priority Scheduling (Non-Preemptive):
PID	Burst	Priority	Waiting	Turnaround
3	5	1		0	5
1	4	2		5	9
2	5	7		9	14

Average Waiting Time    : 4.67
Average Turnaround Time : 9.33
